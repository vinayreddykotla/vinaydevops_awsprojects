Initializing the backend...

Initializing provider plugins...
- Reusing previous version of hashicorp/aws from the dependency lock file
- Using previously-installed hashicorp/aws v4.40.0

Terraform has been successfully initialized!

You may now begin working with Terraform. Try running "terraform plan" to see
any changes that are required for your infrastructure. All Terraform commands
should now work.

If you ever set or change modules or backend configuration for Terraform,
rerun this command to reinitialize your working directory. If you forget, other
commands will detect it and remind you to do so if necessary.

vinay@vinay MINGW64 ~/awsdevops_projects/vinaydevops_awsprojects/iac (main)
$ terraform fmt

vinay@vinay MINGW64 ~/awsdevops_projects/vinaydevops_awsprojects/iac (main)
$ terraform validate
Success! The configuration is valid.


vinay@vinay MINGW64 ~/awsdevops_projects/vinaydevops_awsprojects/iac (main)
$ terraform plan
aws_instance.vinaydevops_jenkins: Refreshing state... [id=i-02e72ffef66d57616]

Terraform used the selected providers to generate the following execution plan. Resource actions are       
indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_instance.vinaydevops_sonarqube will be created
  + resource "aws_instance" "vinaydevops_sonarqube" {
      + ami                                  = "ami-0fc5d935ebf8bc3bc"
      + arn                                  = (known after apply)
      + associate_public_ip_address          = (known after apply)
      + availability_zone                    = (known after apply)
      + cpu_core_count                       = (known after apply)
      + cpu_threads_per_core                 = (known after apply)
      + disable_api_stop                     = (known after apply)
      + disable_api_termination              = (known after apply)
      + ebs_optimized                        = (known after apply)
      + get_password_data                    = false
      + host_id                              = (known after apply)
      + host_resource_group_arn              = (known after apply)
      + iam_instance_profile                 = "ec2SSMConnect1"
      + id                                   = (known after apply)
      + instance_initiated_shutdown_behavior = (known after apply)
      + instance_state                       = (known after apply)
      + instance_type                        = "t2.medium"
      + ipv6_address_count                   = (known after apply)
      + ipv6_addresses                       = (known after apply)
      + key_name                             = "nv_sshkeys"
      + monitoring                           = (known after apply)
      + outpost_arn                          = (known after apply)
      + password_data                        = (known after apply)
      + placement_group                      = (known after apply)
      + placement_partition_number           = (known after apply)
      + primary_network_interface_id         = (known after apply)
      + private_dns                          = (known after apply)
      + private_ip                           = (known after apply)
      + public_dns                           = (known after apply)
      + public_ip                            = (known after apply)
      + secondary_private_ips                = (known after apply)
      + security_groups                      = (known after apply)
      + source_dest_check                    = true
      + subnet_id                            = "subnet-0790ca62eccb87948"
      + tags                                 = {
          + "CreatedBy" = "Terraform"
          + "Name"      = "vinaydevops_sonarqube"
        }
      + tags_all                             = {
          + "CreatedBy" = "Terraform"
          + "Name"      = "vinaydevops_sonarqube"
        }
      + tenancy                              = (known after apply)
      + user_data                            = "e0856b7b62b472ded00a24bb7897a965aec99aff"
      + user_data_base64                     = (known after apply)
      + user_data_replace_on_change          = false
      + vpc_security_group_ids               = [
          + "sg-0b619531d4da9d56a",
        ]
    }

Plan: 1 to add, 0 to change, 0 to destroy.

────────────────────────────────────────────────────────────────────────────────────────────────────────── 

Note: You didn't use the -out option to save this plan, so Terraform can't guarantee to take exactly these 
actions if you run "terraform apply" now.